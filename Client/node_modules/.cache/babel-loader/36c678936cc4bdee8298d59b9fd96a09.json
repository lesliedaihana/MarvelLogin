{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PERSONAL\\\\Documents\\\\GitHub\\\\MarvelLogin\\\\Client\\\\src\\\\Components\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Button, Typography } from \"@mui/material\";\nimport useModal from \"./CustomHooks/useModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [stateForm, setStateForm] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\"\n  });\n  const {\n    UseModal,\n    setStateModal\n  } = useModal();\n  const emailRegex = /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i;\n  const {\n    username,\n    email,\n    password,\n    confirmpassword\n  } = stateForm;\n\n  const handleChange = e => {\n    setStateForm({ ...stateForm,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!Object.values(stateForm).every(value => value !== \"\")) {\n      return setStateModal({\n        text: \"Todos los campos son requeridos\",\n        error: true,\n        showmodal: true\n      });\n    }\n\n    if (!emailRegex.test(email)) {\n      return setStateModal({\n        text: \"Porfavor ingrese un correo valido\",\n        error: true,\n        showmodal: true\n      });\n    }\n\n    if (password !== confirmpassword) {\n      return setStateModal({\n        text: \"Las contrase単as no corresponden\",\n        error: true,\n        showmodal: true\n      });\n    }\n\n    try {\n      const response = await axios(\"http://localhost:4000/user/signup\", {\n        method: \"post\",\n        data: {\n          username,\n          email,\n          password\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        responseType: \"json\"\n      });\n      setStateForm({\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmpassword: \"\"\n      });\n      const {\n        error,\n        message\n      } = response.data;\n      return setStateModal({\n        text: message,\n        error: error,\n        showmodal: true\n      });\n    } catch (error) {\n      setStateForm({\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmpassword: \"\"\n      });\n      return setStateModal({\n        text: error.response.data.message,\n        error: true,\n        showmodal: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      width: \"50%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      backgroundColor: \"white\",\n      gap: \"12px\",\n      padding: \"25px\",\n      borderRadius: \"4px\"\n    },\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      sx: {\n        color: \"#2b2b2b\",\n        fontSize: \"30px\"\n      },\n      children: \"Registrarse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Nombre\",\n      variant: \"outlined\",\n      type: \"text\",\n      name: \"username\",\n      value: username,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Correo\",\n      variant: \"outlined\",\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Contrase\\xF1a\",\n      variant: \"outlined\",\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Confirmar Contrase\\xF1a\",\n      variant: \"outlined\",\n      type: \"password\",\n      name: \"confirmpassword\",\n      value: confirmpassword,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      sx: {\n        alignSelf: \"end\",\n        textTransform: \"none\"\n      },\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UseModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"DcJAxKruy7OkTWcV6YNjIab4+4s=\", false, function () {\n  return [useModal];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","axios","TextField","Button","Typography","useModal","Register","stateForm","setStateForm","username","email","password","confirmpassword","UseModal","setStateModal","emailRegex","handleChange","e","target","name","value","handleSubmit","preventDefault","Object","values","every","text","error","showmodal","test","response","method","data","headers","responseType","message","width","display","flexDirection","backgroundColor","gap","padding","borderRadius","color","fontSize","alignSelf","textTransform"],"sources":["C:/Users/PERSONAL/Documents/GitHub/MarvelLogin/Client/src/Components/Register.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { TextField, Button, Typography } from \"@mui/material\";\r\n\r\nimport useModal from \"./CustomHooks/useModal\";\r\n\r\nconst Register = () => {\r\n  const [stateForm, setStateForm] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmpassword: \"\",\r\n  });\r\n\r\n  const { UseModal, setStateModal } = useModal();\r\n\r\n  const emailRegex =\r\n    /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i;\r\n\r\n  const { username, email, password, confirmpassword } = stateForm;\r\n\r\n  const handleChange = (e) => {\r\n    setStateForm({\r\n      ...stateForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!Object.values(stateForm).every((value) => value !== \"\")) {\r\n      return setStateModal({\r\n        text: \"Todos los campos son requeridos\",\r\n        error: true,\r\n        showmodal: true,\r\n      });\r\n    }\r\n\r\n    if (!emailRegex.test(email)) {\r\n      return setStateModal({\r\n        text: \"Porfavor ingrese un correo valido\",\r\n        error: true,\r\n        showmodal: true,\r\n      });\r\n    }\r\n\r\n    if (password !== confirmpassword) {\r\n      return setStateModal({\r\n        text: \"Las contrase単as no corresponden\",\r\n        error: true,\r\n        showmodal: true,\r\n      });\r\n    }\r\n\r\n    try {\r\n      const response = await axios(\"http://localhost:4000/user/signup\", {\r\n        method: \"post\",\r\n        data: {\r\n          username,\r\n          email,\r\n          password,\r\n        },\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        responseType: \"json\",\r\n      });\r\n\r\n      setStateForm({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmpassword: \"\",\r\n      });\r\n\r\n      const { error, message } = response.data;\r\n\r\n      return setStateModal({\r\n        text: message,\r\n        error: error,\r\n        showmodal: true,\r\n      });\r\n    } catch (error) {\r\n      setStateForm({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmpassword: \"\",\r\n      });\r\n      \r\n      return setStateModal({\r\n        text: error.response.data.message,\r\n        error: true,\r\n        showmodal: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      style={{\r\n        width: \"50%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: \"white\",\r\n        gap: \"12px\",\r\n        padding: \"25px\",\r\n        borderRadius: \"4px\",\r\n      }}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Typography variant=\"h1\" sx={{ color: \"#2b2b2b\", fontSize: \"30px\" }}>\r\n        Registrarse\r\n      </Typography>\r\n      <TextField\r\n        label=\"Nombre\"\r\n        variant=\"outlined\"\r\n        type=\"text\"\r\n        name=\"username\"\r\n        value={username}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        label=\"Correo\"\r\n        variant=\"outlined\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={email}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        label=\"Contrase単a\"\r\n        variant=\"outlined\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={password}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        label=\"Confirmar Contrase単a\"\r\n        variant=\"outlined\"\r\n        type=\"password\"\r\n        name=\"confirmpassword\"\r\n        value={confirmpassword}\r\n        onChange={handleChange}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        type=\"submit\"\r\n        sx={{\r\n          alignSelf: \"end\",\r\n          textTransform: \"none\",\r\n        }}\r\n      >\r\n        Enviar\r\n      </Button>\r\n      <UseModal />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}